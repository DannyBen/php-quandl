{"name":"PHP Quandl","tagline":"Easy access to the Quandl Data API using PHP.","body":"PHP Quandl\r\n==========\r\n\r\nThis library provides easy access to the \r\n[Quandl API](https://www.quandl.com/help/api) \r\nusing PHP.\r\n\r\n\r\nGeting Started\r\n--------------\r\n\r\nInclude the `Quandl.php` class in your code, and run one of \r\nthe examples. \r\n\r\n\r\nExamples\r\n--------\r\n\r\nThis is a basic call. It will return a PHP object with price\r\ndata for AAPL:\r\n\r\n\t$api_key = \"YOUR_KEY_HERE\";\r\n\t$quandl = new Quandl($api_key);\r\n\t$data = $quandl->getSymbol(\"GOOG/NASDAQ_AAPL\");\r\n\r\nYou may pass any parameter that is mentioned in the Quandl\r\ndocumentation:\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$data = $quandl->getSymbol($symbol, [\r\n\t\t\"sort_order\"      => \"desc\",\r\n\t\t\"exclude_headers\" => true,\r\n\t\t\"rows\"            => 10,\r\n\t\t\"column\"          => 4, \r\n\t]);\r\n\r\n\r\nThe date range options get a special treatment. You may use\r\nany date string that PHP's `strtotime()` understands.\r\n\r\n\t$quandl = new Quandl($api_key, \"csv\");\r\n\t$data = $quandl->getSymbol($symbol, [\r\n\t\t\"trim_start\" => \"today-30 days\",\r\n\t\t\"trim_end\"   => \"today\",\r\n\t]);\r\n\r\nMultiple symbols, supported symbols and search methods are also available:\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$data = $quandl->getSymbols([\"WIKI/AAPL\", \"WIKI/CSCO\"]);\r\n\t$data = $quandl->getSearch(\"crude oil\");\r\n\t$data = $quandl->getList(\"WIKI\", 1, 10);\r\n\r\n\r\nMore examples can be found in the [examples.php](https://github.com/DannyBen/php-quandl/blob/master/examples.php) file \r\n\r\nCaching\r\n-------\r\n\r\nYou may provide the `quandl` object with a cache handler function.\r\nThis function should be responsible for both reading from your cache and storing to it. \r\n\r\nSee the [example_cache.php](https://github.com/DannyBen/php-quandl/blob/master/example_cache.php) file.\r\n\r\n\r\nReference\r\n---------\r\n\r\n### Constructor and public properties\r\n\r\nThe constructor accepts two optional parameters: `$api_key` and `$format`:\r\n\r\n\t$quandl = new Quandl(\"YOUR KEY\", \"csv\");\r\n\r\nYou may also set these properties later:\r\n\r\n\t$quandl->api_key = \"YOUR KEY\";\r\n\t$quandl->format  = \"json\";\r\n\r\n`$format` can be one of `csv`, `xml`, `json`, and `object` (which will return a php object obtained with `json_decode()`).\r\n\r\nAfter each call to Quandl, the property `$last_url` will be set \r\nfor debugging and other purposes.\r\n\r\n\r\n### getSymbol\r\n\r\n`mixed getSymbol( string $symbol [, array $params ] )`\r\n\r\nReturns an object containing data for a given symbol. The format\r\nof the result depends on the value of `$quandl->format`.\r\n\r\nThe optional parameters array is an associative `key => value`\r\narray with any of the parameters supported by Quandl.\r\n\r\nYou do not need to pass `auth_token` in the array, it will be \r\nautomatically appended.\r\n\r\n\r\n### getSymbols\r\n\r\n`mixed getSymbols( array $symbols [, array $params ] )`\r\n\r\nSame as `getSymbol()` only instead of a single symbol, it receives\r\nan array of multiple symbols. Each symbol in the array may be \r\nlisted using the slash notation (`WIKI/AAPL`) or dot notation \r\n(`WIKI.AAPL`).\r\n\r\nIn addition, you may append the column selector to each symbol in \r\norder get only selected columns. For example, `WIKI/AAPL.4` will \r\nreturn only the close prices (column 4) of AAPL.\r\n\r\n\r\n### getSearch\r\n\r\n`mixed getSearch( string $query [, int $page, int $per_page] )`\r\n\r\nReturns a search result object. Number of results per page is \r\nlimited to 300 by default.\r\n\r\nNote that currently Quandl does not support CSV response for this \r\nnode so if `$quandl->format` is \"csv\", this call will return a PHP\r\nobject instead.\r\n\r\n\r\n### getList\r\n\r\n`mixed getList( string $source [, int $page, int $per_page] )`\r\n\r\nReturns a list of symbols in a given source. Number of results per page\r\nis limited to 300 by default.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}