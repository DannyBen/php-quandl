{"name":"PHP Quandl","tagline":"Easy access to the Quandl Data API using PHP.","body":"PHP Quandl\r\n==========\r\n\r\nThis library provides easy access to the \r\n[Quandl API](https://www.quandl.com/help/api) \r\nusing PHP.\r\n\r\n\r\nGeting Started\r\n--------------\r\n\r\nInclude the `Quandl.php` class in your code, and run one of \r\nthe examples. \r\n\r\n\r\nExamples\r\n--------\r\n\r\nThis is used in all subsequent examples.\r\n\r\n\t$api_key = \"YOUR_KEY_HERE\";\r\n\t$symbol  = \"GOOG/NASDAQ_AAPL\";\r\n\r\n### Example 1: Hello Quandl\r\n\r\nThe simplest request form, sent without any API key.\r\n\r\n\t$quandl = new Quandl();\r\n\t$data = $quandl->getCsv($symbol);\r\n\r\n### Example 2: API Key + JSON\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$data = $quandl->getJson($symbol);\r\n\r\n### Example 3: Decoded JSON + Date Range\r\n\r\nUsing the `trim_start` and `trim_end` properties, you may input any\r\nstring that can be understood by PHP's `strtotime`. \r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$quandl->trim_start = \"today-30 days\";\r\n\t$quandl->trim_end   = \"today\";\r\n\t$data = $quandl->getObject($symbol);\r\n\r\n### Example 4: XML + More parameters\r\n\r\nYou may assign any parameter in the Quandl documentation, using the \r\nsyntax `$quandl->param_name = value`.\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$quandl->sort_order = \"desc\"; // asc|desc\r\n\t$quandl->exclude_headers = true;\r\n\t$quandl->rows = 10;\r\n\t$quandl->column = 4; // 4 = close price\r\n\t$data = $quandl->getXml($symbol);\r\n\r\n### Example 5: Frequency\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$quandl->collapse = \"weekly\"; // none|daily|weekly|monthly|quarterly|annual\r\n\t$data = $quandl->getCsv($symbol);\r\n\r\n### Example 6: Transformation\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$quandl->transformation = \"diff\"; // none|diff|rdiff|cumul|normalize\r\n\t$data = $quandl->getCsv($symbol);\r\n\r\n### Example 7: Constructor Options + Multiple Symbols\r\n\r\nThe second parameter of the contructor is an optional array of options.\r\nUsing this array is the equivalent of using the \r\n`$quandl->parameter = value` syntax.\r\n\r\nIn addition, all the methods that accept a symbol, also accept an array\r\nof symbols. Each symbol in the array may be written in the usual \r\nslash notation (GOOG/NASDAQ_AAPL) or the dot notation (GOOG.NASDAQ_AAPL).\r\n\r\n\t$quandl = new Quandl($api_key, [\"rows\"=>30]);\r\n\t$data = $quandl->getData([\"GOOG/NASDAQ_AAPL\", \"GOOG/NASDAQ_CSCO\"]);\r\n\r\n### Example 8: Multiple Symbols with Column Selector\r\n\r\nWhen using multiple symbols, you may append a column selector (exactly\r\nas described in the Quandl documentation) to select specific columns.\r\n\r\n\t$quandl = new Quandl($api_key, [\"rows\"=>30]);\r\n\t$data = $quandl->getData([\"GOOG/NASDAQ_AAPL.4\", \"GOOG/NASDAQ_CSCO.4\"]);\r\n\r\n### Example 9: Search\r\n\r\nThe search method receives a query, and two additional optional \r\nparameters: Results per page, and page number.\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$data = $quandl->search(\"crude oil\", 10, 2);\r\n\r\n### Example 10: Metadata\r\n\r\n\t$quandl = new Quandl($api_key);\r\n\t$quandl->exclude_data = true;\r\n\t$data = $quandl->getObject($symbol);\r\n\r\n\r\nCaching\r\n-------\r\n\r\nYou may provide the `quandl` object with a cache handler function.\r\nThis function should be responsible for both reading from your cache and storing to it. \r\n\r\nSee the `example_cache.php` file.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}